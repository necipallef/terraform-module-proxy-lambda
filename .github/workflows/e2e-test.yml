name: e2e test
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checkout the project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run 'terraform init'
        run: terraform init

      - name: Run 'terraform fmt'
        run: terraform fmt -check

      - name: Run 'terraform validate'
        run: terraform validate

  deploy:
    name: Deploy the project
    needs: [validate]
    runs-on: ubuntu-latest
    environment: e2e_test
    steps:
      - name: "check env"
        run: env

      - name: "check if AWS_SECRET_ACCESS_KEY exists"
        env:
          secret1: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: ${{ env.secret1 == '' }}
        run: echo AWS_SECRET_ACCESS_KEY is empty!

      - name: "check if NECIP exists"
        env:
          secret2: ${{ secrets.NECIP }}
        if: ${{ env.secret2 == '' }}
        run: echo NECIP is empty!
      - name: "check if AWS_ACCESS_KEY_ID exists"
        if: ${{ vars.AWS_ACCESS_KEY_ID == '' }}
        run: echo AWS_ACCESS_KEY_ID is empty!

      - name: "check if NECIP2 exists"
        if: ${{ vars.NECIP2 == '' }}
        run: echo NECIP2 is empty!

      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checkout the project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Go inside test directory
        run: cd e2e

      - name: Run 'terraform init'
        run: terraform init

      - name: Create required parameters
        run: |
          touch terraform.tfvars
          echo "fpjs_agent_download_path = \"agent\"" >> terraform.tfvars
          echo "fpjs_get_result_path = \"result\"" >> terraform.tfvars
          echo "fpjs_shared_secret = \"secret\"" >> terraform.tfvars

      - name: Run 'terraform plan'
        run: terraform plan -input=false

  test:
    name: Test the project
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Run playwright
        run: echo playwright!
