name: e2e test
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'

env:
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checkout the project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run 'terraform init'
        run: terraform init

      - name: Run 'terraform fmt'
        run: terraform fmt -check

      - name: Run 'terraform validate'
        run: terraform validate

  deploy:
    name: Deploy the project
    needs: [ validate ]
    runs-on: ubuntu-latest
    steps:
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checkout the project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Go inside test directory
        run: cd e2e

      - name: Run 'terraform init'
        run: terraform init

      - name: Create required parameters
        run: |
          touch terraform.tfvars
          echo "fpjs_agent_download_path = \"agent\"" >> terraform.tfvars
          echo "fpjs_get_result_path = \"result\"" >> terraform.tfvars
          echo "fpjs_shared_secret = \"secret\"" >> terraform.tfvars

      - name: Run 'terraform plan'
        run: terraform plan -input=false

      - name: Run 'terraform apply'
        run: terraform apply -auto-approve -input=false

      - name: Cache state files
        uses: actions/cache/save@v4
        with:
          key: terraform.tfstate-${{ hashFiles('terraform.tfstate') }}
          path: terraform.tfstate

  test:
    name: Test the project
    needs: [ deploy ]
    runs-on: ubuntu-latest
    steps:
      - name: Run playwright
        run: echo playwright!

  cleanup:
    name: Clean up resources creating via Terraform
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - name: Install terraform
        uses: hashicorp/setup-terraform@v3

      - name: Checkout the project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Go inside test directory
        run: cd e2e

      - name: Run 'terraform init'
        run: terraform init

      - name: Get file from cache
        uses: actions/cache/restore@v4
        with:
          key: terraform.tfstate-${{ hashFiles('terraform.tfstate') }}
          path: terraform.tfstate

      - name: Run 'terraform destroy'
        run: terraform destroy -auto-approve \
          -var fpjs_agent_download_path=arbitrary_value \
          -var fpjs_get_result_path=arbitrary_value \
          -var fpjs_shared_secret=arbitrary_value
